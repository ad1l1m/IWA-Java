name: Run WebInspect locally
on: [push, workflow_dispatch]

jobs:
  wi:
    runs-on: [self-hosted, windows, x64, webinspect]
    env:
      IWA_DIR:  C:\Users\Administrator\IWA-Java
      TARGET:   http://localhost:8888   
    steps:
      - name: git pull
        shell: powershell
        run: |
          git -C $env:IWA_DIR pull
      - name: localhost
        run: ls
      # - name: mvn clean package
      #   run: mvn clean package
      # - name: mvn -Pwar clean package
      #   run: mvn -Pwar clean package
      - name: run application
        shell: pwsh
        run: |
          $p = Start-Process -FilePath "cmd.exe" `
            -ArgumentList "/c","mvn -q -DskipTests spring-boot:run" `
            -WorkingDirectory $env:IWA_DIR `
            -WindowStyle Hidden `
            -PassThru `
            -RedirectStandardOutput "$env:RUNNER_TEMP\app.out.log" `
            -RedirectStandardError  "$env:RUNNER_TEMP\app.err.log"
          "APP_PID=$($p.Id)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Wait for app to be ready
        shell: pwsh
        run: |
          $u = "${{ env.TARGET }}"   # если есть /actuator/health — лучше проверять его
          $deadline = (Get-Date).AddMinutes(3)
          while ((Get-Date) -lt $deadline) {
            try {
              Invoke-WebRequest -UseBasicParsing -TimeoutSec 3 $u | Out-Null
              Write-Host "App is up at $u"
              exit 0
            } catch { Start-Sleep 2 }
          }
          Get-Content "$env:RUNNER_TEMP\app.err.log" -Tail 200 -ErrorAction SilentlyContinue
          throw "Service is not responding at $u"
      - name: UseBasicParsing
        run: ping localhost:8888
      # - name: Wait for app to be ready
      #   shell: pwsh
      #   run: |
      #     $u = $env:TARGET
      #     1..60 | ForEach-Object {
      #       try {
      #         # если есть actuator/health - используй его
      #         Invoke-WebRequest -UseBasicParsing -TimeoutSec 3 "$u" | Out-Null
      #         exit 0
      #       } catch { Start-Sleep 2 }
      #     }
      #     throw "Service is not responding at $u"
      # - name: scanning application
      #   shell: powershell
      #   run: wi.exe -u http://192.168.64.16:8888 -ps 1 -ep ./testing.fpr
